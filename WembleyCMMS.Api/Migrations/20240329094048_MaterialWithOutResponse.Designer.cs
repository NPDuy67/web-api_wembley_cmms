// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WembleyCMMS.Infrastructure;

#nullable disable

namespace WembleyCMMS.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240329094048_MaterialWithOutResponse")]
    partial class MaterialWithOutResponse
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("causeseq", "application")
                .IncrementsBy(10);

            modelBuilder.HasSequence("correctioneq", "application")
                .IncrementsBy(10);

            modelBuilder.HasSequence("equipmentclasseq", "application")
                .IncrementsBy(10);

            modelBuilder.HasSequence("equipmenteq", "application")
                .IncrementsBy(10);

            modelBuilder.HasSequence("equipmentmaterialeq", "application")
                .IncrementsBy(10);

            modelBuilder.HasSequence("imageeq", "application")
                .IncrementsBy(10);

            modelBuilder.HasSequence("inputtabusearcheq", "application")
                .IncrementsBy(10);

            modelBuilder.HasSequence("inspectionreporteq", "application")
                .IncrementsBy(10);

            modelBuilder.HasSequence("maintenancerequesteq", "application")
                .IncrementsBy(10);

            modelBuilder.HasSequence("maintenanceresponseeq", "application")
                .IncrementsBy(10);

            modelBuilder.HasSequence("materialeq", "application")
                .IncrementsBy(10);

            modelBuilder.HasSequence("materialhistorycardeq", "application")
                .IncrementsBy(10);

            modelBuilder.HasSequence("materialinforeq", "application")
                .IncrementsBy(10);

            modelBuilder.HasSequence("materialrequesteq", "application")
                .IncrementsBy(10);

            modelBuilder.HasSequence("performanceindexeq", "application")
                .IncrementsBy(10);

            modelBuilder.HasSequence("personeq", "application")
                .IncrementsBy(10);

            modelBuilder.HasSequence("soundeq", "application")
                .IncrementsBy(10);

            modelBuilder.HasSequence("timeseriesobjecteq", "application")
                .IncrementsBy(10);

            modelBuilder.HasSequence("workingtimeeq", "application")
                .IncrementsBy(10);

            modelBuilder.Entity("CauseMaintenanceResponse", b =>
                {
                    b.Property<int>("CauseId")
                        .HasColumnType("int");

                    b.Property<int>("MaintenanceResponsesId")
                        .HasColumnType("int");

                    b.HasKey("CauseId", "MaintenanceResponsesId");

                    b.HasIndex("MaintenanceResponsesId");

                    b.ToTable("CauseMaintenanceResponse");
                });

            modelBuilder.Entity("CorrectionMaintenanceResponse", b =>
                {
                    b.Property<int>("CorrectionId")
                        .HasColumnType("int");

                    b.Property<int>("MaintenanceResponsesId")
                        .HasColumnType("int");

                    b.HasKey("CorrectionId", "MaintenanceResponsesId");

                    b.HasIndex("MaintenanceResponsesId");

                    b.ToTable("CorrectionMaintenanceResponse");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.CauseAggregate.Cause", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "causeseq", "application");

                    b.Property<string>("CauseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CauseId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CauseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EquipmentClassId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Severity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CauseId")
                        .IsUnique();

                    b.HasIndex("EquipmentClassId");

                    b.ToTable("Causes");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.CorrectionAggregate.Correction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "correctioneq", "application");

                    b.Property<string>("CorrectionCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectionId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CorrectionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CorrectionType")
                        .HasColumnType("int");

                    b.Property<int>("EstProcessTime")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CorrectionId")
                        .IsUnique();

                    b.ToTable("Corrections");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.EquipmentAggregate.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "equipmenteq", "application");

                    b.Property<string>("Code")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("EquipmentClassId")
                        .HasColumnType("int");

                    b.Property<string>("EquipmentId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MTBFId")
                        .HasColumnType("int");

                    b.Property<int>("MTTFId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("OEEId")
                        .HasColumnType("int");

                    b.Property<string>("ScheduleWorkingTimes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("UsedTime")
                        .HasPrecision(30, 10)
                        .HasColumnType("decimal(30,10)");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentClassId");

                    b.HasIndex("EquipmentId")
                        .IsUnique();

                    b.HasIndex("MTBFId");

                    b.HasIndex("MTTFId");

                    b.HasIndex("OEEId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.EquipmentClassAggregate.EquipmentClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "equipmentclasseq", "application");

                    b.Property<string>("EquipmentClassId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentClassId")
                        .IsUnique();

                    b.ToTable("EquipmentClasses");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.EquipmentMaterialAggregate.EquipmentMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "equipmentmaterialeq", "application");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<string>("EquipmentMaterialId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("FullTime")
                        .HasPrecision(30, 10)
                        .HasColumnType("decimal(30,10)");

                    b.Property<DateTime>("InstalledTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaterialInforId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("UsedTime")
                        .HasPrecision(30, 10)
                        .HasColumnType("decimal(30,10)");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("EquipmentMaterialId")
                        .IsUnique();

                    b.HasIndex("MaterialInforId");

                    b.ToTable("EquipmentMaterials");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.ImageAggregate.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "imageeq", "application");

                    b.Property<string>("ImageId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ImageId")
                        .IsUnique();

                    b.ToTable("Images");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.InputAggregate.InputTabuSearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "inputtabusearcheq", "application");

                    b.Property<string>("InputTabuSearchId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("JsonString")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InputTabuSearchId")
                        .IsUnique();

                    b.ToTable("InputTabuSearchs");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.InspectionReportAggregate.InspectionReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "inspectionreporteq", "application");

                    b.Property<string>("Group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspectionReportId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsRequest")
                        .HasColumnType("bit");

                    b.Property<int?>("MaintenanceResponseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InspectionReportId")
                        .IsUnique();

                    b.HasIndex("MaintenanceResponseId");

                    b.ToTable("InspectionReports");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.MaintenanceRequestAggregate.MaintenanceRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "maintenancerequesteq", "application");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EquipmentClassId")
                        .HasColumnType("int");

                    b.Property<int?>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int?>("EstProcessingTime")
                        .HasColumnType("int");

                    b.Property<string>("Images")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaintenanceRequestId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("PlannedStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Problem")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("RequestedCompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RequestedPriority")
                        .HasColumnType("int");

                    b.Property<int>("RequesterId")
                        .HasColumnType("int");

                    b.Property<int?>("ResponsiblePersonId")
                        .HasColumnType("int");

                    b.Property<int?>("ReviewerId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentClassId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("MaintenanceRequestId")
                        .IsUnique();

                    b.HasIndex("RequesterId");

                    b.HasIndex("ResponsiblePersonId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("MaintenanceRequests");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.MaintenanceResponseAggregate.MaintenanceResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "maintenanceresponseeq", "application");

                    b.Property<DateTime?>("ActualFinishTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualStartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EquipmentClassId")
                        .HasColumnType("int");

                    b.Property<int?>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int?>("EstProcessTime")
                        .HasColumnType("int");

                    b.Property<string>("Images")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaintenanceResponseId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PlannedFinish")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PlannedStart")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Problem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<int?>("ResponsiblePersonId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentClassId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("MaintenanceResponseId")
                        .IsUnique();

                    b.HasIndex("RequestId");

                    b.HasIndex("ResponsiblePersonId");

                    b.ToTable("MaintenanceResponses");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.MaterialInforAggregate.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "materialeq", "application");

                    b.Property<int?>("MaintenanceResponseId")
                        .HasColumnType("int");

                    b.Property<string>("MaterialId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MaterialInforId")
                        .HasColumnType("int");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaintenanceResponseId");

                    b.HasIndex("MaterialId")
                        .IsUnique();

                    b.HasIndex("MaterialInforId");

                    b.ToTable("Material");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.MaterialInforAggregate.MaterialHistoryCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "materialhistorycardeq", "application");

                    b.Property<decimal>("After")
                        .HasPrecision(30, 10)
                        .HasColumnType("decimal(30,10)");

                    b.Property<decimal>("Before")
                        .HasPrecision(30, 10)
                        .HasColumnType("decimal(30,10)");

                    b.Property<decimal>("Input")
                        .HasPrecision(30, 10)
                        .HasColumnType("decimal(30,10)");

                    b.Property<string>("MaterialHistoryCardId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MaterialInforId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Output")
                        .HasPrecision(30, 10)
                        .HasColumnType("decimal(30,10)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MaterialHistoryCardId")
                        .IsUnique();

                    b.HasIndex("MaterialInforId");

                    b.ToTable("MaterialHistoryCard");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.MaterialInforAggregate.MaterialInfor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "materialinforeq", "application");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialInforId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("MinimumQuantity")
                        .HasPrecision(30, 10)
                        .HasColumnType("decimal(30,10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialInforId")
                        .IsUnique();

                    b.ToTable("MaterialInfors");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.MaterialInforAggregate.MaterialRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "materialrequesteq", "application");

                    b.Property<decimal>("AdditionalNumber")
                        .HasPrecision(30, 10)
                        .HasColumnType("decimal(30,10)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrentNumber")
                        .HasPrecision(30, 10)
                        .HasColumnType("decimal(30,10)");

                    b.Property<DateTime>("ExpectedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ExpectedNumber")
                        .HasPrecision(30, 10)
                        .HasColumnType("decimal(30,10)");

                    b.Property<int>("MaterialInforId")
                        .HasColumnType("int");

                    b.Property<string>("MaterialRequestId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MaterialInforId");

                    b.HasIndex("MaterialRequestId")
                        .IsUnique();

                    b.ToTable("MaterialRequest");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.PerformanceIndexAggregate.PerformanceIndex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "performanceindexeq", "application");

                    b.Property<bool>("IsTracking")
                        .HasColumnType("bit");

                    b.Property<int>("MaxLength")
                        .HasColumnType("int");

                    b.Property<string>("PerformanceIndexId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("RecentValue")
                        .HasPrecision(30, 10)
                        .HasColumnType("decimal(30,10)");

                    b.HasKey("Id");

                    b.HasIndex("PerformanceIndexId")
                        .IsUnique();

                    b.ToTable("PerformanceIndexs");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.PersonAggregate.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "personeq", "application");

                    b.Property<string>("PersonId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PersonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.SoundAggregate.Sound", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "soundeq", "application");

                    b.Property<string>("SoundId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SoundId")
                        .IsUnique();

                    b.ToTable("Sounds");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.TimeSeriesObjectAggregate.TimeSeriesObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "timeseriesobjecteq", "application");

                    b.Property<int?>("PerformanceIndexId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeSeriesObjectId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Value")
                        .HasPrecision(30, 10)
                        .HasColumnType("decimal(30,10)");

                    b.HasKey("Id");

                    b.HasIndex("PerformanceIndexId");

                    b.HasIndex("TimeSeriesObjectId")
                        .IsUnique();

                    b.ToTable("TimeSeriesObjects");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.WorkingTimeAggregate.WorkingTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "workingtimeeq", "application");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<int>("ResponsiblePersonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("To")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkingTimeId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("ResponsiblePersonId");

                    b.HasIndex("WorkingTimeId")
                        .IsUnique();

                    b.ToTable("WorkingTimes");
                });

            modelBuilder.Entity("CauseMaintenanceResponse", b =>
                {
                    b.HasOne("WembleyCMMS.Domain.AggregateModels.CauseAggregate.Cause", null)
                        .WithMany()
                        .HasForeignKey("CauseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WembleyCMMS.Domain.AggregateModels.MaintenanceResponseAggregate.MaintenanceResponse", null)
                        .WithMany()
                        .HasForeignKey("MaintenanceResponsesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CorrectionMaintenanceResponse", b =>
                {
                    b.HasOne("WembleyCMMS.Domain.AggregateModels.CorrectionAggregate.Correction", null)
                        .WithMany()
                        .HasForeignKey("CorrectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WembleyCMMS.Domain.AggregateModels.MaintenanceResponseAggregate.MaintenanceResponse", null)
                        .WithMany()
                        .HasForeignKey("MaintenanceResponsesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.CauseAggregate.Cause", b =>
                {
                    b.HasOne("WembleyCMMS.Domain.AggregateModels.EquipmentClassAggregate.EquipmentClass", "EquipmentClass")
                        .WithMany()
                        .HasForeignKey("EquipmentClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipmentClass");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.EquipmentAggregate.Equipment", b =>
                {
                    b.HasOne("WembleyCMMS.Domain.AggregateModels.EquipmentClassAggregate.EquipmentClass", "EquipmentClass")
                        .WithMany("Equipments")
                        .HasForeignKey("EquipmentClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WembleyCMMS.Domain.AggregateModels.PerformanceIndexAggregate.PerformanceIndex", "MTBF")
                        .WithMany()
                        .HasForeignKey("MTBFId");

                    b.HasOne("WembleyCMMS.Domain.AggregateModels.PerformanceIndexAggregate.PerformanceIndex", "MTTF")
                        .WithMany()
                        .HasForeignKey("MTTFId");

                    b.HasOne("WembleyCMMS.Domain.AggregateModels.PerformanceIndexAggregate.PerformanceIndex", "OEE")
                        .WithMany()
                        .HasForeignKey("OEEId");

                    b.Navigation("EquipmentClass");

                    b.Navigation("MTBF");

                    b.Navigation("MTTF");

                    b.Navigation("OEE");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.EquipmentMaterialAggregate.EquipmentMaterial", b =>
                {
                    b.HasOne("WembleyCMMS.Domain.AggregateModels.EquipmentAggregate.Equipment", "Equipment")
                        .WithMany("Materials")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WembleyCMMS.Domain.AggregateModels.MaterialInforAggregate.MaterialInfor", "MaterialInfor")
                        .WithMany()
                        .HasForeignKey("MaterialInforId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("MaterialInfor");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.InspectionReportAggregate.InspectionReport", b =>
                {
                    b.HasOne("WembleyCMMS.Domain.AggregateModels.MaintenanceResponseAggregate.MaintenanceResponse", null)
                        .WithMany("InspectionReports")
                        .HasForeignKey("MaintenanceResponseId");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.MaintenanceRequestAggregate.MaintenanceRequest", b =>
                {
                    b.HasOne("WembleyCMMS.Domain.AggregateModels.EquipmentClassAggregate.EquipmentClass", "EquipmentClass")
                        .WithMany()
                        .HasForeignKey("EquipmentClassId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WembleyCMMS.Domain.AggregateModels.EquipmentAggregate.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("WembleyCMMS.Domain.AggregateModels.PersonAggregate.Person", "Requester")
                        .WithMany()
                        .HasForeignKey("RequesterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WembleyCMMS.Domain.AggregateModels.PersonAggregate.Person", "ResponsiblePerson")
                        .WithMany()
                        .HasForeignKey("ResponsiblePersonId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("WembleyCMMS.Domain.AggregateModels.PersonAggregate.Person", "Reviewer")
                        .WithMany()
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Equipment");

                    b.Navigation("EquipmentClass");

                    b.Navigation("Requester");

                    b.Navigation("ResponsiblePerson");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.MaintenanceResponseAggregate.MaintenanceResponse", b =>
                {
                    b.HasOne("WembleyCMMS.Domain.AggregateModels.EquipmentClassAggregate.EquipmentClass", "EquipmentClass")
                        .WithMany()
                        .HasForeignKey("EquipmentClassId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WembleyCMMS.Domain.AggregateModels.EquipmentAggregate.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("WembleyCMMS.Domain.AggregateModels.MaintenanceRequestAggregate.MaintenanceRequest", "Request")
                        .WithMany()
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WembleyCMMS.Domain.AggregateModels.PersonAggregate.Person", "ResponsiblePerson")
                        .WithMany()
                        .HasForeignKey("ResponsiblePersonId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Equipment");

                    b.Navigation("EquipmentClass");

                    b.Navigation("Request");

                    b.Navigation("ResponsiblePerson");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.MaterialInforAggregate.Material", b =>
                {
                    b.HasOne("WembleyCMMS.Domain.AggregateModels.MaintenanceResponseAggregate.MaintenanceResponse", null)
                        .WithMany("Materials")
                        .HasForeignKey("MaintenanceResponseId");

                    b.HasOne("WembleyCMMS.Domain.AggregateModels.MaterialInforAggregate.MaterialInfor", "MaterialInfor")
                        .WithMany("Materials")
                        .HasForeignKey("MaterialInforId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialInfor");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.MaterialInforAggregate.MaterialHistoryCard", b =>
                {
                    b.HasOne("WembleyCMMS.Domain.AggregateModels.MaterialInforAggregate.MaterialInfor", null)
                        .WithMany("MaterialHistoryCards")
                        .HasForeignKey("MaterialInforId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.MaterialInforAggregate.MaterialRequest", b =>
                {
                    b.HasOne("WembleyCMMS.Domain.AggregateModels.MaterialInforAggregate.MaterialInfor", "MaterialInfor")
                        .WithMany("MaterialRequests")
                        .HasForeignKey("MaterialInforId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialInfor");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.TimeSeriesObjectAggregate.TimeSeriesObject", b =>
                {
                    b.HasOne("WembleyCMMS.Domain.AggregateModels.PerformanceIndexAggregate.PerformanceIndex", null)
                        .WithMany("History")
                        .HasForeignKey("PerformanceIndexId");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.WorkingTimeAggregate.WorkingTime", b =>
                {
                    b.HasOne("WembleyCMMS.Domain.AggregateModels.EquipmentAggregate.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WembleyCMMS.Domain.AggregateModels.PersonAggregate.Person", "ResponsiblePerson")
                        .WithMany()
                        .HasForeignKey("ResponsiblePersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("ResponsiblePerson");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.EquipmentAggregate.Equipment", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.EquipmentClassAggregate.EquipmentClass", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.MaintenanceResponseAggregate.MaintenanceResponse", b =>
                {
                    b.Navigation("InspectionReports");

                    b.Navigation("Materials");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.MaterialInforAggregate.MaterialInfor", b =>
                {
                    b.Navigation("MaterialHistoryCards");

                    b.Navigation("MaterialRequests");

                    b.Navigation("Materials");
                });

            modelBuilder.Entity("WembleyCMMS.Domain.AggregateModels.PerformanceIndexAggregate.PerformanceIndex", b =>
                {
                    b.Navigation("History");
                });
#pragma warning restore 612, 618
        }
    }
}
